<%= form_for [@user, @workout] do |f| %>
  <% if @workout.errors.any? %>
    <div id="error_explanation">
      <h2><%= pluralize(@workout.errors.count, "error") %> prohibited this workout from being saved:</h2>

      <ul>
      <% @workout.errors.full_messages.each do |msg| %>
        <li><%= msg %></li>
      <% end %>
      </ul>
    </div>
  <% end %>
	
	<div class="field">
		<%= f.label "Category" %>
  	<%= f.select(:category, [['Full Body'], ['Lower Body'], ['Upper Body'], ['Chest'], ['Legs'], ['Arms'], ['Back'], ['Hips'], ['Shoulders']], {}, :style => "height: 32px; width: 180px") %>
	</div>

		<div class="field">
			<%= f.label "name" %>
			<%= f.text_field :name, :placeholder => " name", :size => "8" %>
		</div>
		
		<div class="field">
			<%= f.label "time" %>
			<%= f.text_field :hours, size: "3", :placeholder => " hr" %>
			<%= f.text_field :minutes, size: "3", :placeholder => " min" %>
			<%= f.text_field :seconds, size: "3", :placeholder => " sec" %>
		</div>
		
		<div class="field">
			<div id="sets">
					<%= f.label "Sets" %>
					<%= f.text_field :sets, size: "5", :placeholder => " sets" %>
			</div>
		</div>

		<div class="field">
			<div id="sets">
				<%= link_to ' ', '#', id: "num_sets" %>
			</div>
			<ol id="add_exercises">
					<%= f.fields_for :exercise do |builder| %>
						<%= render 'exercise_fields', f: builder, :locals => {:edit => true} %> 	
					<% end %>
					<%= link_to_add_fields "+ Add Exercise", f, :exercises %>
			</ol>
		</div>
		
		<div class="field">
			<%= link_to 'Today (change date)', '#', class: "workout_created_at_link" %>
			<%= f.text_field :created_at, :placeholder => "date", class: "jquery-ui-date" %>
		</div>
		
		<div class="field" id="submit">
			<%= f.submit "I did this" %>
		</div>

<% end %>

<div id="empty_div"></div>

<script>
/*Focuses on workout name on page load*/
$("#workout_name").focus();

/***
* Date input (default is today). If user wants to change this,
* he/she can click link and datepicker will be brought up 
***/
$(".jquery-ui-date").datepicker({ dateFormat: 'yy-mm-dd' });
$('.jquery-ui-date').hide();
$('.workout_created_at_link').on('click', function() {
	$('.workout_created_at_link').hide();
	$('.jquery-ui-date').show();
	return false;
});

/*****
* Adds form input fields belonging to attributes on the Exercise model. The
* data attributes are passed via the link_to_add_fields helper function (in application_helper.rb)
* When the link_to_add_fields is clicked, a RegEx searches the data hash for the id, inserts the form fields
before the link, and replaces the regexp with the index variables i (initialized to 0).
The index (i) replaces the contents of the .ex_counter div in the rendered partial. If the remove field link
is clicked, a second index, k, decrements i to reflect the number of deleted exercises.
*****/	
var k = 0;
$('form').on('click', '.remove_fields', function(event) {
	k++;
});
$('form').on('click', '.add_fields', function(event) {
	var i = $('#workout_form .ex_fields').size() - k;
	var regexp = new RegExp($(this).data('id'), 'g');
	$(this).before($(this).data('fields').replace(regexp, i));
	event.preventDefault();
	$("#workout_exercises_attributes_" + i + "_name").focus();
	$("#workout_form .ex_fields .ex_counter").last().html("" + (i+1));
	i++;
});
</script>

<script>
/*** 
* On change in workout form sets input, hide input area, and display
* value inputted in link, which can be clicked again to re-edit.
***/
$("#workout_sets").change(function () {
     var value = $(this).val();
     $("#num_sets").text(value);
			$("#num_sets").append(' sets of:');
			$('#num_sets').show("fold", 1000);
			$('#workout_sets').hide("blind", 1000);
			$('#sets label').hide();
   }).keyup();

	$('#num_sets').on('click', function() {
		$('#num_sets').hide();
		$('#workout_sets').show();
	});
</script>


 


